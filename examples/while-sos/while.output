> {plus(3,4)} => {RES}
RES |-> 7
fromList [("out",TVal (List [])),("store",TVal (Map (fromList [])))]

> {plus(2,plus(3,4))} => {9}
_X0 |-> 9
fromList [("out",TVal (List [])),("store",TVal (Map (fromList [])))]

> {leq(3,3)} => {_}
_X0 |-> true
fromList [("out",TVal (List [])),("store",TVal (Map (fromList [])))]

> {leq(plus(2,2),3)} => {_}
_X0 |-> false
fromList [("out",TVal (List [])),("store",TVal (Map (fromList [])))]

> {"x"} => {_}

fromList [("out",TVal (List [])),("store",TVal (Map (fromList [])))]

> {print(plus(1,2))} -> {_}
_X0 |-> done
fromList [("out",TVal (List [Int 3])),("store",TVal (Map (fromList [])))]

> {done} ->> {done()}
_X0 |-> done
fromList [("out",TVal (List [])),("store",TVal (Map (fromList [])))]

> {print(plus(1,2))} ->> {_}
_X0 |-> done
fromList [("out",TVal (List [Int 3])),("store",TVal (Map (fromList [])))]

> {seq(assign("b",1),assign("c",2))} ->> {_}
_X0 |-> done
fromList [("out",TVal (List [])),("store",TVal (Map (fromList [(String "b",Int 1),(String "c",Int 2)])))]

> {seq(assign("x",plus(1,2)),print("x"))} ->> {_}
_X0 |-> done
fromList [("out",TVal (List [Int 3])),("store",TVal (Map (fromList [(String "x",Int 3)])))]

> {seq(assign("x",-5),while(leq("x",10),seq(assign("x",plus("x",1)),print("x"))))} ->> {_}
_X0 |-> done
fromList [("out",TVal (List [Int (-4),Int (-3),Int (-2),Int (-1),Int 0,Int 1,Int 2,Int 3,Int 4,Int 5,Int 6,Int 7,Int 8,Int 9,Int 10,Int 11])),("store",TVal (Map (fromList [(String "x",Int 11)])))]

